class Language {

  protected String name;
  protected int numSpeakers;
  protected String regionsSpoken;
  protected String wordOrder;
  // main method
  public static void main(String[] args) {
  
  Language spanish = new Language ("Spanish", 55000000, "en Colombia, el salvador, américa latina y españa", "subject - verb - object");
  spanish.getInfo();

  Mayan kiche = new Mayan("Ki 'che'", 733600);
  kiche.getInfo();

  SinoTibetan mandarin = new SinoTibetan("Mandarin Chinese", 123123123);
  mandarin.getInfo();

  SinoTibetan burmese = new SinoTibetan("Burmese", 12312);
  burmese.getInfo();
  }
    
  public Language(String name, int speakers, String regions, String wdOrder) {
      this.name = name;
      this.numSpeakers = speakers;
      this.regionsSpoken = regions;
      this.wordOrder = wdOrder;

    }
    public void getInfo() {
      System.out.println(this.name + " is spoken by " + this.numSpeakers + " people mainly in "+ this.regionsSpoken + " The language follows the word order: " + this.wordOrder);

    }
  
}



// Another file


class Mayan extends Language {

  Mayan(String name, int speakers) {
    super(name, speakers, "Central America", "verb-object-subject");
  }

  
  @Override
  public void getInfo() {
    System.out.println(name + " is spoken by " + numSpeakers + " people mainly in "+ regionsSpoken + " The language follows the word order: " + wordOrder);
  }

}



// another file

class Mayan extends Language {

  Mayan(String name, int speakers) {
    super(name, speakers, "Central America", "verb-object-subject");
  }

  
  @Override
  public void getInfo() {
    System.out.println(name + " is spoken by " + numSpeakers + " people mainly in "+ regionsSpoken + " The language follows the word order: " + wordOrder);
  }

}
